# Generated by Django 4.0.6 on 2022-08-09 04:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import phonenumber_field.modelfields
import timezone_field.fields
import uuid


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_user_current_job_title_user_current_skills_and_more'), ('core', '0003_remove_user_phone_remove_user_time_zone_and_more'), ('core', '0004_user_user_status'), ('core', '0005_remove_user_user_status'), ('core', '0006_user_phone'), ('core', '0007_user_time_zone')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('current_job_title', models.CharField(blank=True, max_length=255)),
                ('current_skills', models.CharField(blank=True, max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('github_handle', models.CharField(blank=True, max_length=255)),
                ('gmail', models.EmailField(blank=True, max_length=254)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('linkedin_account', models.CharField(blank=True, max_length=255)),
                ('preferred_email', models.EmailField(blank=True, max_length=254)),
                ('slack_id', models.CharField(blank=True, max_length=11)),
                ('target_job_title', models.CharField(blank=True, max_length=255)),
                ('target_skills', models.CharField(blank=True, max_length=255)),
                ('texting_ok', models.BooleanField(default=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('time_zone', timezone_field.fields.TimeZoneField(blank=True, default='America/Los_Angeles', use_pytz=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
